// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Especie {
  id        Int      @id @default(autoincrement())
  nome      String   @db.VarChar(60)
  animais   Animal[]
  @@map("especies")
}



model Animal {
  id        Int      @id @default(autoincrement())
  nome      String   @db.VarChar(60)
  idade     Int
  sexo      Sexos
  destaque  Boolean  @default(true)
  foto      String 
  descricao String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  porte     Portes   @default(Medio)
  especie   Especie  @relation(fields: [especieId], references: [id])
  especieId Int
  fotos     Foto[]
  pedidos   Pedido[]
  @@map("animais")
}

model Foto{
  id          Int    @id @default(autoincrement())
  descricao   String @db.VarChar(30)
  codigoFoto  String @db.LongText
  animal      Animal @relation(fields: [animalId], references: [id])
  animalId    Int
  @@map("fotos")
}


  //Token usado no id para manter logado nas requisicoes, garante mais seguranca quando for armazenado
  //no local storage, pode ser usado fora do id, geralmente Ã© e pode mudar ou experar no tempo estipulado
  //podendo assim ter um campo id sequencial e usando o token em outro item abaixo.
model Adotante {

  id           String   @db.VarChar(36) @id @default(uuid()) 
  nome         String   @db.VarChar(60)
  fone         String   @db.VarChar(60)
  endereco     String   @db.VarChar(180)
  email        String   @db.VarChar(60) @unique
  senha        String   @db.VarChar(60)   // senha deve ser varchar(60)
  recoveryCode String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  pedidos      Pedido[]
  @@map("adotantes")
}

model Pedido{
  id          Int       @id @default(autoincrement())
  adotante    Adotante  @relation(fields: [adotanteId], references: [id])
  adotanteId  String    @db.VarChar(36)
  animal      Animal    @relation(fields: [animalId], references: [id])
  animalId    Int
  descricao   String    @db.VarChar(300)
  resposta    String?    @db.VarChar(300)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt  
  @@map("pedidos")
}

enum Portes{
  Pequeno
  Medio 
  Grande
}

enum Sexos{
  Macho
  Femea
}
